// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: anime_season_images_poster.sql

package db

import (
	"context"
)

const createAnimeSeasonPosterImage = `-- name: CreateAnimeSeasonPosterImage :one
INSERT INTO anime_season_poster_images (season_id, image_id)
VALUES ($1, $2)
RETURNING id, season_id, image_id, created_at
`

type CreateAnimeSeasonPosterImageParams struct {
	SeasonID int64
	ImageID  int64
}

func (q *Queries) CreateAnimeSeasonPosterImage(ctx context.Context, arg CreateAnimeSeasonPosterImageParams) (AnimeSeasonPosterImage, error) {
	row := q.db.QueryRow(ctx, createAnimeSeasonPosterImage, arg.SeasonID, arg.ImageID)
	var i AnimeSeasonPosterImage
	err := row.Scan(
		&i.ID,
		&i.SeasonID,
		&i.ImageID,
		&i.CreatedAt,
	)
	return i, err
}

const deleteAnimeSeasonPosterImage = `-- name: DeleteAnimeSeasonPosterImage :exec
DELETE FROM anime_season_poster_images
WHERE season_id = $1 AND image_id = $2
`

type DeleteAnimeSeasonPosterImageParams struct {
	SeasonID int64
	ImageID  int64
}

func (q *Queries) DeleteAnimeSeasonPosterImage(ctx context.Context, arg DeleteAnimeSeasonPosterImageParams) error {
	_, err := q.db.Exec(ctx, deleteAnimeSeasonPosterImage, arg.SeasonID, arg.ImageID)
	return err
}

const listAnimeSeasonPosterImages = `-- name: ListAnimeSeasonPosterImages :many
SELECT image_id
FROM anime_season_poster_images
WHERE season_id = $1
`

func (q *Queries) ListAnimeSeasonPosterImages(ctx context.Context, seasonID int64) ([]int64, error) {
	rows, err := q.db.Query(ctx, listAnimeSeasonPosterImages, seasonID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []int64{}
	for rows.Next() {
		var image_id int64
		if err := rows.Scan(&image_id); err != nil {
			return nil, err
		}
		items = append(items, image_id)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
