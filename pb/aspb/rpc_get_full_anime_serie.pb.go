// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: aspb/rpc_get_full_anime_serie.proto

package aspb

import (
	nfpb "github.com/dj-yacine-flutter/gojo/pb/nfpb"
	shpb "github.com/dj-yacine-flutter/gojo/pb/shpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnimeSerieSeasonDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Season          *AnimeSerieSeasonResponse    `protobuf:"bytes,1,opt,name=season,proto3" json:"season,omitempty"`
	SeasonMetas     *nfpb.AnimeMetaResponse      `protobuf:"bytes,2,opt,name=seasonMetas,proto3" json:"seasonMetas,omitempty"`
	SeasonResources *shpb.AnimeResourceResponse  `protobuf:"bytes,3,opt,name=seasonResources,proto3,oneof" json:"seasonResources,omitempty"`
	SeasonEpisodes  []*AnimeSerieEpisodeResponse `protobuf:"bytes,4,rep,name=seasonEpisodes,proto3" json:"seasonEpisodes,omitempty"`
}

func (x *AnimeSerieSeasonDetails) Reset() {
	*x = AnimeSerieSeasonDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspb_rpc_get_full_anime_serie_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeSerieSeasonDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeSerieSeasonDetails) ProtoMessage() {}

func (x *AnimeSerieSeasonDetails) ProtoReflect() protoreflect.Message {
	mi := &file_aspb_rpc_get_full_anime_serie_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeSerieSeasonDetails.ProtoReflect.Descriptor instead.
func (*AnimeSerieSeasonDetails) Descriptor() ([]byte, []int) {
	return file_aspb_rpc_get_full_anime_serie_proto_rawDescGZIP(), []int{0}
}

func (x *AnimeSerieSeasonDetails) GetSeason() *AnimeSerieSeasonResponse {
	if x != nil {
		return x.Season
	}
	return nil
}

func (x *AnimeSerieSeasonDetails) GetSeasonMetas() *nfpb.AnimeMetaResponse {
	if x != nil {
		return x.SeasonMetas
	}
	return nil
}

func (x *AnimeSerieSeasonDetails) GetSeasonResources() *shpb.AnimeResourceResponse {
	if x != nil {
		return x.SeasonResources
	}
	return nil
}

func (x *AnimeSerieSeasonDetails) GetSeasonEpisodes() []*AnimeSerieEpisodeResponse {
	if x != nil {
		return x.SeasonEpisodes
	}
	return nil
}

type AnimeSerieSeasonDetailsRsponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seasons []*AnimeSerieSeasonDetails `protobuf:"bytes,1,rep,name=seasons,proto3" json:"seasons,omitempty"`
}

func (x *AnimeSerieSeasonDetailsRsponse) Reset() {
	*x = AnimeSerieSeasonDetailsRsponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspb_rpc_get_full_anime_serie_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeSerieSeasonDetailsRsponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeSerieSeasonDetailsRsponse) ProtoMessage() {}

func (x *AnimeSerieSeasonDetailsRsponse) ProtoReflect() protoreflect.Message {
	mi := &file_aspb_rpc_get_full_anime_serie_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeSerieSeasonDetailsRsponse.ProtoReflect.Descriptor instead.
func (*AnimeSerieSeasonDetailsRsponse) Descriptor() ([]byte, []int) {
	return file_aspb_rpc_get_full_anime_serie_proto_rawDescGZIP(), []int{1}
}

func (x *AnimeSerieSeasonDetailsRsponse) GetSeasons() []*AnimeSerieSeasonDetails {
	if x != nil {
		return x.Seasons
	}
	return nil
}

type GetFullAnimeSerieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeID    int64 `protobuf:"varint,1,opt,name=animeID,proto3" json:"animeID,omitempty"`
	LanguageID int32 `protobuf:"varint,2,opt,name=languageID,proto3" json:"languageID,omitempty"`
}

func (x *GetFullAnimeSerieRequest) Reset() {
	*x = GetFullAnimeSerieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspb_rpc_get_full_anime_serie_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFullAnimeSerieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullAnimeSerieRequest) ProtoMessage() {}

func (x *GetFullAnimeSerieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aspb_rpc_get_full_anime_serie_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullAnimeSerieRequest.ProtoReflect.Descriptor instead.
func (*GetFullAnimeSerieRequest) Descriptor() ([]byte, []int) {
	return file_aspb_rpc_get_full_anime_serie_proto_rawDescGZIP(), []int{2}
}

func (x *GetFullAnimeSerieRequest) GetAnimeID() int64 {
	if x != nil {
		return x.AnimeID
	}
	return 0
}

func (x *GetFullAnimeSerieRequest) GetLanguageID() int32 {
	if x != nil {
		return x.LanguageID
	}
	return 0
}

type GetFullAnimeSerieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeSerie   *AnimeSerieResponse             `protobuf:"bytes,1,opt,name=animeSerie,proto3" json:"animeSerie,omitempty"`
	AnimeMeta    *nfpb.AnimeMetaResponse         `protobuf:"bytes,2,opt,name=animeMeta,proto3,oneof" json:"animeMeta,omitempty"`
	AnimeLinks   *shpb.AnimeLinkResponse         `protobuf:"bytes,3,opt,name=animeLinks,proto3,oneof" json:"animeLinks,omitempty"`
	AnimeGenres  *nfpb.AnimeGenresResponse       `protobuf:"bytes,4,opt,name=animeGenres,proto3,oneof" json:"animeGenres,omitempty"`
	AnimeStudios *nfpb.AnimeStudiosResponse      `protobuf:"bytes,5,opt,name=animeStudios,proto3,oneof" json:"animeStudios,omitempty"`
	AnimeSeasons *AnimeSerieSeasonDetailsRsponse `protobuf:"bytes,6,opt,name=animeSeasons,proto3,oneof" json:"animeSeasons,omitempty"`
}

func (x *GetFullAnimeSerieResponse) Reset() {
	*x = GetFullAnimeSerieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspb_rpc_get_full_anime_serie_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFullAnimeSerieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullAnimeSerieResponse) ProtoMessage() {}

func (x *GetFullAnimeSerieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aspb_rpc_get_full_anime_serie_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullAnimeSerieResponse.ProtoReflect.Descriptor instead.
func (*GetFullAnimeSerieResponse) Descriptor() ([]byte, []int) {
	return file_aspb_rpc_get_full_anime_serie_proto_rawDescGZIP(), []int{3}
}

func (x *GetFullAnimeSerieResponse) GetAnimeSerie() *AnimeSerieResponse {
	if x != nil {
		return x.AnimeSerie
	}
	return nil
}

func (x *GetFullAnimeSerieResponse) GetAnimeMeta() *nfpb.AnimeMetaResponse {
	if x != nil {
		return x.AnimeMeta
	}
	return nil
}

func (x *GetFullAnimeSerieResponse) GetAnimeLinks() *shpb.AnimeLinkResponse {
	if x != nil {
		return x.AnimeLinks
	}
	return nil
}

func (x *GetFullAnimeSerieResponse) GetAnimeGenres() *nfpb.AnimeGenresResponse {
	if x != nil {
		return x.AnimeGenres
	}
	return nil
}

func (x *GetFullAnimeSerieResponse) GetAnimeStudios() *nfpb.AnimeStudiosResponse {
	if x != nil {
		return x.AnimeStudios
	}
	return nil
}

func (x *GetFullAnimeSerieResponse) GetAnimeSeasons() *AnimeSerieSeasonDetailsRsponse {
	if x != nil {
		return x.AnimeSeasons
	}
	return nil
}

var File_aspb_rpc_get_full_anime_serie_proto protoreflect.FileDescriptor

var file_aspb_rpc_get_full_anime_serie_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x73, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x61, 0x73, 0x70, 0x62, 0x1a, 0x16, 0x61, 0x73, 0x70,
	0x62, 0x2f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x61, 0x73, 0x70, 0x62, 0x2f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x61, 0x73, 0x70, 0x62, 0x2f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x5f, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0f, 0x6e, 0x66, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6e, 0x66, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x66, 0x70, 0x62, 0x2f, 0x73, 0x74, 0x75, 0x64,
	0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x73, 0x68, 0x70, 0x62, 0x2f, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x73, 0x68, 0x70, 0x62, 0x2f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x02, 0x0a, 0x17, 0x41,
	0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x73, 0x70, 0x62, 0x2e, 0x41, 0x6e,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x12, 0x4a, 0x0a, 0x0f, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x68, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x45,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x61, 0x73, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x45,
	0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x22, 0x59, 0x0a, 0x1e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x73, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x54, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x22, 0xf4, 0x03, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x41,
	0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x73, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x68,
	0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x01, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x66, 0x70,
	0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x02, 0x52, 0x0b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0c, 0x61, 0x6e, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6e, 0x66, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x03, 0x52, 0x0c, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x0c,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x04, 0x52, 0x0c, 0x61, 0x6e, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x61, 0x6e, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x61, 0x6e,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6a, 0x2d, 0x79, 0x61, 0x63, 0x69,
	0x6e, 0x65, 0x2d, 0x66, 0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x6f, 0x6a, 0x6f, 0x2f,
	0x70, 0x62, 0x2f, 0x61, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aspb_rpc_get_full_anime_serie_proto_rawDescOnce sync.Once
	file_aspb_rpc_get_full_anime_serie_proto_rawDescData = file_aspb_rpc_get_full_anime_serie_proto_rawDesc
)

func file_aspb_rpc_get_full_anime_serie_proto_rawDescGZIP() []byte {
	file_aspb_rpc_get_full_anime_serie_proto_rawDescOnce.Do(func() {
		file_aspb_rpc_get_full_anime_serie_proto_rawDescData = protoimpl.X.CompressGZIP(file_aspb_rpc_get_full_anime_serie_proto_rawDescData)
	})
	return file_aspb_rpc_get_full_anime_serie_proto_rawDescData
}

var file_aspb_rpc_get_full_anime_serie_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_aspb_rpc_get_full_anime_serie_proto_goTypes = []interface{}{
	(*AnimeSerieSeasonDetails)(nil),        // 0: aspb.AnimeSerieSeasonDetails
	(*AnimeSerieSeasonDetailsRsponse)(nil), // 1: aspb.AnimeSerieSeasonDetailsRsponse
	(*GetFullAnimeSerieRequest)(nil),       // 2: aspb.GetFullAnimeSerieRequest
	(*GetFullAnimeSerieResponse)(nil),      // 3: aspb.GetFullAnimeSerieResponse
	(*AnimeSerieSeasonResponse)(nil),       // 4: aspb.AnimeSerieSeasonResponse
	(*nfpb.AnimeMetaResponse)(nil),         // 5: nfpb.AnimeMetaResponse
	(*shpb.AnimeResourceResponse)(nil),     // 6: shpb.AnimeResourceResponse
	(*AnimeSerieEpisodeResponse)(nil),      // 7: aspb.AnimeSerieEpisodeResponse
	(*AnimeSerieResponse)(nil),             // 8: aspb.AnimeSerieResponse
	(*shpb.AnimeLinkResponse)(nil),         // 9: shpb.AnimeLinkResponse
	(*nfpb.AnimeGenresResponse)(nil),       // 10: nfpb.AnimeGenresResponse
	(*nfpb.AnimeStudiosResponse)(nil),      // 11: nfpb.AnimeStudiosResponse
}
var file_aspb_rpc_get_full_anime_serie_proto_depIdxs = []int32{
	4,  // 0: aspb.AnimeSerieSeasonDetails.season:type_name -> aspb.AnimeSerieSeasonResponse
	5,  // 1: aspb.AnimeSerieSeasonDetails.seasonMetas:type_name -> nfpb.AnimeMetaResponse
	6,  // 2: aspb.AnimeSerieSeasonDetails.seasonResources:type_name -> shpb.AnimeResourceResponse
	7,  // 3: aspb.AnimeSerieSeasonDetails.seasonEpisodes:type_name -> aspb.AnimeSerieEpisodeResponse
	0,  // 4: aspb.AnimeSerieSeasonDetailsRsponse.seasons:type_name -> aspb.AnimeSerieSeasonDetails
	8,  // 5: aspb.GetFullAnimeSerieResponse.animeSerie:type_name -> aspb.AnimeSerieResponse
	5,  // 6: aspb.GetFullAnimeSerieResponse.animeMeta:type_name -> nfpb.AnimeMetaResponse
	9,  // 7: aspb.GetFullAnimeSerieResponse.animeLinks:type_name -> shpb.AnimeLinkResponse
	10, // 8: aspb.GetFullAnimeSerieResponse.animeGenres:type_name -> nfpb.AnimeGenresResponse
	11, // 9: aspb.GetFullAnimeSerieResponse.animeStudios:type_name -> nfpb.AnimeStudiosResponse
	1,  // 10: aspb.GetFullAnimeSerieResponse.animeSeasons:type_name -> aspb.AnimeSerieSeasonDetailsRsponse
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_aspb_rpc_get_full_anime_serie_proto_init() }
func file_aspb_rpc_get_full_anime_serie_proto_init() {
	if File_aspb_rpc_get_full_anime_serie_proto != nil {
		return
	}
	file_aspb_anime_serie_proto_init()
	file_aspb_anime_serie_season_proto_init()
	file_aspb_anime_serie_episode_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aspb_rpc_get_full_anime_serie_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnimeSerieSeasonDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspb_rpc_get_full_anime_serie_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnimeSerieSeasonDetailsRsponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspb_rpc_get_full_anime_serie_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFullAnimeSerieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspb_rpc_get_full_anime_serie_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFullAnimeSerieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aspb_rpc_get_full_anime_serie_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_aspb_rpc_get_full_anime_serie_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aspb_rpc_get_full_anime_serie_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aspb_rpc_get_full_anime_serie_proto_goTypes,
		DependencyIndexes: file_aspb_rpc_get_full_anime_serie_proto_depIdxs,
		MessageInfos:      file_aspb_rpc_get_full_anime_serie_proto_msgTypes,
	}.Build()
	File_aspb_rpc_get_full_anime_serie_proto = out.File
	file_aspb_rpc_get_full_anime_serie_proto_rawDesc = nil
	file_aspb_rpc_get_full_anime_serie_proto_goTypes = nil
	file_aspb_rpc_get_full_anime_serie_proto_depIdxs = nil
}
