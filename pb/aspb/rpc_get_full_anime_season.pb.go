// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: aspb/rpc_get_full_anime_season.proto

package aspb

import (
	nfpb "github.com/dj-yacine-flutter/gojo/pb/nfpb"
	shpb "github.com/dj-yacine-flutter/gojo/pb/shpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetFullAnimeSeasonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonID   int64 `protobuf:"varint,1,opt,name=seasonID,proto3" json:"seasonID,omitempty"`
	LanguageID int32 `protobuf:"varint,2,opt,name=languageID,proto3" json:"languageID,omitempty"`
}

func (x *GetFullAnimeSeasonRequest) Reset() {
	*x = GetFullAnimeSeasonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspb_rpc_get_full_anime_season_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFullAnimeSeasonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullAnimeSeasonRequest) ProtoMessage() {}

func (x *GetFullAnimeSeasonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aspb_rpc_get_full_anime_season_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullAnimeSeasonRequest.ProtoReflect.Descriptor instead.
func (*GetFullAnimeSeasonRequest) Descriptor() ([]byte, []int) {
	return file_aspb_rpc_get_full_anime_season_proto_rawDescGZIP(), []int{0}
}

func (x *GetFullAnimeSeasonRequest) GetSeasonID() int64 {
	if x != nil {
		return x.SeasonID
	}
	return 0
}

func (x *GetFullAnimeSeasonRequest) GetLanguageID() int32 {
	if x != nil {
		return x.LanguageID
	}
	return 0
}

type GetFullAnimeSeasonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimeSeason    *AnimeSeasonResponse         `protobuf:"bytes,1,opt,name=animeSeason,proto3" json:"animeSeason,omitempty"`
	SeasonMeta     *nfpb.AnimeMetaResponse      `protobuf:"bytes,2,opt,name=seasonMeta,proto3" json:"seasonMeta,omitempty"`
	SeasonResoures *shpb.AnimeResourceResponse  `protobuf:"bytes,3,opt,name=seasonResoures,proto3" json:"seasonResoures,omitempty"`
	SeasonGenres   []*nfpb.Genre                `protobuf:"bytes,4,rep,name=seasonGenres,proto3" json:"seasonGenres,omitempty"`
	SeasonStudios  []*nfpb.Studio               `protobuf:"bytes,5,rep,name=seasonStudios,proto3" json:"seasonStudios,omitempty"`
	SeasonTags     []*AnimeSeasonTag            `protobuf:"bytes,6,rep,name=seasonTags,proto3" json:"seasonTags,omitempty"`
	SeasonPosters  []*shpb.ImageResponse        `protobuf:"bytes,7,rep,name=seasonPosters,proto3" json:"seasonPosters,omitempty"`
	SeasonTrailers []*shpb.AnimeTrailerResponse `protobuf:"bytes,8,rep,name=seasonTrailers,proto3" json:"seasonTrailers,omitempty"`
}

func (x *GetFullAnimeSeasonResponse) Reset() {
	*x = GetFullAnimeSeasonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspb_rpc_get_full_anime_season_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFullAnimeSeasonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullAnimeSeasonResponse) ProtoMessage() {}

func (x *GetFullAnimeSeasonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aspb_rpc_get_full_anime_season_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullAnimeSeasonResponse.ProtoReflect.Descriptor instead.
func (*GetFullAnimeSeasonResponse) Descriptor() ([]byte, []int) {
	return file_aspb_rpc_get_full_anime_season_proto_rawDescGZIP(), []int{1}
}

func (x *GetFullAnimeSeasonResponse) GetAnimeSeason() *AnimeSeasonResponse {
	if x != nil {
		return x.AnimeSeason
	}
	return nil
}

func (x *GetFullAnimeSeasonResponse) GetSeasonMeta() *nfpb.AnimeMetaResponse {
	if x != nil {
		return x.SeasonMeta
	}
	return nil
}

func (x *GetFullAnimeSeasonResponse) GetSeasonResoures() *shpb.AnimeResourceResponse {
	if x != nil {
		return x.SeasonResoures
	}
	return nil
}

func (x *GetFullAnimeSeasonResponse) GetSeasonGenres() []*nfpb.Genre {
	if x != nil {
		return x.SeasonGenres
	}
	return nil
}

func (x *GetFullAnimeSeasonResponse) GetSeasonStudios() []*nfpb.Studio {
	if x != nil {
		return x.SeasonStudios
	}
	return nil
}

func (x *GetFullAnimeSeasonResponse) GetSeasonTags() []*AnimeSeasonTag {
	if x != nil {
		return x.SeasonTags
	}
	return nil
}

func (x *GetFullAnimeSeasonResponse) GetSeasonPosters() []*shpb.ImageResponse {
	if x != nil {
		return x.SeasonPosters
	}
	return nil
}

func (x *GetFullAnimeSeasonResponse) GetSeasonTrailers() []*shpb.AnimeTrailerResponse {
	if x != nil {
		return x.SeasonTrailers
	}
	return nil
}

var File_aspb_rpc_get_full_anime_season_proto protoreflect.FileDescriptor

var file_aspb_rpc_get_full_anime_season_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x73, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x61, 0x73, 0x70, 0x62, 0x1a, 0x17, 0x61, 0x73,
	0x70, 0x62, 0x2f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x61, 0x73, 0x70, 0x62, 0x2f, 0x74, 0x61, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x6e, 0x66, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x6e, 0x66, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x66, 0x70, 0x62, 0x2f, 0x73,
	0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x73, 0x68, 0x70,
	0x62, 0x2f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x73, 0x68, 0x70, 0x62, 0x2f, 0x61, 0x6e, 0x69,
	0x6d, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x73, 0x68, 0x70, 0x62, 0x2f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6c,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46,
	0x75, 0x6c, 0x6c, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x22, 0xf1, 0x03, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x73, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x37, 0x0a,
	0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x68, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0c, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x0c,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0d,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x66, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x69,
	0x6f, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73,
	0x12, 0x34, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x73, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x54, 0x61, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x73, 0x68, 0x70, 0x62, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x42, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x69, 0x6c,
	0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x68, 0x70, 0x62,
	0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x72, 0x61,
	0x69, 0x6c, 0x65, 0x72, 0x73, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6a, 0x2d, 0x79, 0x61, 0x63, 0x69, 0x6e, 0x65, 0x2d, 0x66, 0x6c,
	0x75, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x6f, 0x6a, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x73,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aspb_rpc_get_full_anime_season_proto_rawDescOnce sync.Once
	file_aspb_rpc_get_full_anime_season_proto_rawDescData = file_aspb_rpc_get_full_anime_season_proto_rawDesc
)

func file_aspb_rpc_get_full_anime_season_proto_rawDescGZIP() []byte {
	file_aspb_rpc_get_full_anime_season_proto_rawDescOnce.Do(func() {
		file_aspb_rpc_get_full_anime_season_proto_rawDescData = protoimpl.X.CompressGZIP(file_aspb_rpc_get_full_anime_season_proto_rawDescData)
	})
	return file_aspb_rpc_get_full_anime_season_proto_rawDescData
}

var file_aspb_rpc_get_full_anime_season_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_aspb_rpc_get_full_anime_season_proto_goTypes = []interface{}{
	(*GetFullAnimeSeasonRequest)(nil),  // 0: aspb.GetFullAnimeSeasonRequest
	(*GetFullAnimeSeasonResponse)(nil), // 1: aspb.GetFullAnimeSeasonResponse
	(*AnimeSeasonResponse)(nil),        // 2: aspb.AnimeSeasonResponse
	(*nfpb.AnimeMetaResponse)(nil),     // 3: nfpb.AnimeMetaResponse
	(*shpb.AnimeResourceResponse)(nil), // 4: shpb.AnimeResourceResponse
	(*nfpb.Genre)(nil),                 // 5: nfpb.Genre
	(*nfpb.Studio)(nil),                // 6: nfpb.Studio
	(*AnimeSeasonTag)(nil),             // 7: aspb.AnimeSeasonTag
	(*shpb.ImageResponse)(nil),         // 8: shpb.ImageResponse
	(*shpb.AnimeTrailerResponse)(nil),  // 9: shpb.AnimeTrailerResponse
}
var file_aspb_rpc_get_full_anime_season_proto_depIdxs = []int32{
	2, // 0: aspb.GetFullAnimeSeasonResponse.animeSeason:type_name -> aspb.AnimeSeasonResponse
	3, // 1: aspb.GetFullAnimeSeasonResponse.seasonMeta:type_name -> nfpb.AnimeMetaResponse
	4, // 2: aspb.GetFullAnimeSeasonResponse.seasonResoures:type_name -> shpb.AnimeResourceResponse
	5, // 3: aspb.GetFullAnimeSeasonResponse.seasonGenres:type_name -> nfpb.Genre
	6, // 4: aspb.GetFullAnimeSeasonResponse.seasonStudios:type_name -> nfpb.Studio
	7, // 5: aspb.GetFullAnimeSeasonResponse.seasonTags:type_name -> aspb.AnimeSeasonTag
	8, // 6: aspb.GetFullAnimeSeasonResponse.seasonPosters:type_name -> shpb.ImageResponse
	9, // 7: aspb.GetFullAnimeSeasonResponse.seasonTrailers:type_name -> shpb.AnimeTrailerResponse
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_aspb_rpc_get_full_anime_season_proto_init() }
func file_aspb_rpc_get_full_anime_season_proto_init() {
	if File_aspb_rpc_get_full_anime_season_proto != nil {
		return
	}
	file_aspb_anime_season_proto_init()
	file_aspb_tag_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aspb_rpc_get_full_anime_season_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFullAnimeSeasonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspb_rpc_get_full_anime_season_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFullAnimeSeasonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aspb_rpc_get_full_anime_season_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aspb_rpc_get_full_anime_season_proto_goTypes,
		DependencyIndexes: file_aspb_rpc_get_full_anime_season_proto_depIdxs,
		MessageInfos:      file_aspb_rpc_get_full_anime_season_proto_msgTypes,
	}.Build()
	File_aspb_rpc_get_full_anime_season_proto = out.File
	file_aspb_rpc_get_full_anime_season_proto_rawDesc = nil
	file_aspb_rpc_get_full_anime_season_proto_goTypes = nil
	file_aspb_rpc_get_full_anime_season_proto_depIdxs = nil
}
