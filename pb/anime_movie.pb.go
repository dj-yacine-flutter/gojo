// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: anime_movie.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnimeMovieReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalTitle string                 `protobuf:"bytes,1,opt,name=originalTitle,proto3" json:"originalTitle,omitempty"`
	Aired         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=aired,proto3" json:"aired,omitempty"`
	ReleaseYear   int32                  `protobuf:"varint,3,opt,name=releaseYear,proto3" json:"releaseYear,omitempty"`
	Duration      int32                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *AnimeMovieReq) Reset() {
	*x = AnimeMovieReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anime_movie_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeMovieReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeMovieReq) ProtoMessage() {}

func (x *AnimeMovieReq) ProtoReflect() protoreflect.Message {
	mi := &file_anime_movie_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeMovieReq.ProtoReflect.Descriptor instead.
func (*AnimeMovieReq) Descriptor() ([]byte, []int) {
	return file_anime_movie_proto_rawDescGZIP(), []int{0}
}

func (x *AnimeMovieReq) GetOriginalTitle() string {
	if x != nil {
		return x.OriginalTitle
	}
	return ""
}

func (x *AnimeMovieReq) GetAired() *timestamppb.Timestamp {
	if x != nil {
		return x.Aired
	}
	return nil
}

func (x *AnimeMovieReq) GetReleaseYear() int32 {
	if x != nil {
		return x.ReleaseYear
	}
	return 0
}

func (x *AnimeMovieReq) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type AnimeMovieRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalTitle string                 `protobuf:"bytes,1,opt,name=originalTitle,proto3" json:"originalTitle,omitempty"`
	Aired         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=aired,proto3" json:"aired,omitempty"`
	Premiered     string                 `protobuf:"bytes,3,opt,name=premiered,proto3" json:"premiered,omitempty"`
	Duration      int32                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	AnimeMeta     *AnimeMetaRes          `protobuf:"bytes,5,opt,name=animeMeta,proto3" json:"animeMeta,omitempty"`
	AnimeGenres   *AnimeGenresRes        `protobuf:"bytes,6,opt,name=animeGenres,proto3,oneof" json:"animeGenres,omitempty"`
	AnimeStudios  *AnimeStudiosRes       `protobuf:"bytes,7,opt,name=animeStudios,proto3,oneof" json:"animeStudios,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *AnimeMovieRes) Reset() {
	*x = AnimeMovieRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anime_movie_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimeMovieRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimeMovieRes) ProtoMessage() {}

func (x *AnimeMovieRes) ProtoReflect() protoreflect.Message {
	mi := &file_anime_movie_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimeMovieRes.ProtoReflect.Descriptor instead.
func (*AnimeMovieRes) Descriptor() ([]byte, []int) {
	return file_anime_movie_proto_rawDescGZIP(), []int{1}
}

func (x *AnimeMovieRes) GetOriginalTitle() string {
	if x != nil {
		return x.OriginalTitle
	}
	return ""
}

func (x *AnimeMovieRes) GetAired() *timestamppb.Timestamp {
	if x != nil {
		return x.Aired
	}
	return nil
}

func (x *AnimeMovieRes) GetPremiered() string {
	if x != nil {
		return x.Premiered
	}
	return ""
}

func (x *AnimeMovieRes) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AnimeMovieRes) GetAnimeMeta() *AnimeMetaRes {
	if x != nil {
		return x.AnimeMeta
	}
	return nil
}

func (x *AnimeMovieRes) GetAnimeGenres() *AnimeGenresRes {
	if x != nil {
		return x.AnimeGenres
	}
	return nil
}

func (x *AnimeMovieRes) GetAnimeStudios() *AnimeStudiosRes {
	if x != nil {
		return x.AnimeStudios
	}
	return nil
}

func (x *AnimeMovieRes) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_anime_movie_proto protoreflect.FileDescriptor

var file_anime_movie_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa5, 0x01, 0x0a, 0x0d, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x05, 0x61, 0x69, 0x72, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa5, 0x03, 0x0a, 0x0d, 0x41, 0x6e, 0x69, 0x6d,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x30, 0x0a, 0x05, 0x61, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x61, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x09, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0b, 0x61,
	0x6e, 0x69, 0x6d, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0c, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x48, 0x01, 0x52, 0x0c, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x42,
	0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6a,
	0x2d, 0x79, 0x61, 0x63, 0x69, 0x6e, 0x65, 0x2d, 0x66, 0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2f,
	0x67, 0x6f, 0x6a, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_anime_movie_proto_rawDescOnce sync.Once
	file_anime_movie_proto_rawDescData = file_anime_movie_proto_rawDesc
)

func file_anime_movie_proto_rawDescGZIP() []byte {
	file_anime_movie_proto_rawDescOnce.Do(func() {
		file_anime_movie_proto_rawDescData = protoimpl.X.CompressGZIP(file_anime_movie_proto_rawDescData)
	})
	return file_anime_movie_proto_rawDescData
}

var file_anime_movie_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_anime_movie_proto_goTypes = []interface{}{
	(*AnimeMovieReq)(nil),         // 0: pb.AnimeMovieReq
	(*AnimeMovieRes)(nil),         // 1: pb.AnimeMovieRes
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*AnimeMetaRes)(nil),          // 3: pb.AnimeMetaRes
	(*AnimeGenresRes)(nil),        // 4: pb.AnimeGenresRes
	(*AnimeStudiosRes)(nil),       // 5: pb.AnimeStudiosRes
}
var file_anime_movie_proto_depIdxs = []int32{
	2, // 0: pb.AnimeMovieReq.aired:type_name -> google.protobuf.Timestamp
	2, // 1: pb.AnimeMovieRes.aired:type_name -> google.protobuf.Timestamp
	3, // 2: pb.AnimeMovieRes.animeMeta:type_name -> pb.AnimeMetaRes
	4, // 3: pb.AnimeMovieRes.animeGenres:type_name -> pb.AnimeGenresRes
	5, // 4: pb.AnimeMovieRes.animeStudios:type_name -> pb.AnimeStudiosRes
	2, // 5: pb.AnimeMovieRes.createdAt:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_anime_movie_proto_init() }
func file_anime_movie_proto_init() {
	if File_anime_movie_proto != nil {
		return
	}
	file_genre_proto_init()
	file_studio_proto_init()
	file_meta_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_anime_movie_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnimeMovieReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anime_movie_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnimeMovieRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_anime_movie_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_anime_movie_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anime_movie_proto_goTypes,
		DependencyIndexes: file_anime_movie_proto_depIdxs,
		MessageInfos:      file_anime_movie_proto_msgTypes,
	}.Build()
	File_anime_movie_proto = out.File
	file_anime_movie_proto_rawDesc = nil
	file_anime_movie_proto_goTypes = nil
	file_anime_movie_proto_depIdxs = nil
}
