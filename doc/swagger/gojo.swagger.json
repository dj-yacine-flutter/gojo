{
  "swagger": "2.0",
  "info": {
    "title": "Gojoj API",
    "version": "1.1",
    "contact": {
      "name": "Dj Yacine",
      "url": "https://github.com/dj-yacine-flutter"
    }
  },
  "tags": [
    {
      "name": "Gojo"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/anime/genre/create": {
      "post": {
        "summary": "Create new genre",
        "description": "Use this API to create a new genre",
        "operationId": "Gojo_CreateGenre",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateGenreResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateGenreRequest"
            }
          }
        ],
        "tags": [
          "Gojo"
        ]
      }
    },
    "/v1/anime/movie/create": {
      "post": {
        "summary": "Create new anime movie",
        "description": "Use this API to create a new anime movie",
        "operationId": "Gojo_CreateAnimeMovie",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateAnimeMovieResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateAnimeMovieRequest"
            }
          }
        ],
        "tags": [
          "Gojo"
        ]
      }
    },
    "/v1/renew_token": {
      "post": {
        "summary": "Renew access token",
        "description": "Use this API to renew user's access token",
        "operationId": "Gojo_RenewToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRenewTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "refreshToken",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Gojo"
        ]
      }
    },
    "/v1/user/create": {
      "post": {
        "summary": "Create new user",
        "description": "Use this API to create a new user",
        "operationId": "Gojo_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateUserRequest"
            }
          }
        ],
        "tags": [
          "Gojo"
        ]
      }
    },
    "/v1/user/login": {
      "post": {
        "summary": "Login user",
        "description": "Use this API to login user and get access token \u0026 refresh token",
        "operationId": "Gojo_LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLoginUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoginUserRequest"
            }
          }
        ],
        "tags": [
          "Gojo"
        ]
      }
    },
    "/v1/user/update": {
      "patch": {
        "summary": "Update user",
        "description": "Use this API to update user email or fullName or password using the username",
        "operationId": "Gojo_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "Gojo"
        ]
      }
    },
    "/v1/verify_email": {
      "get": {
        "summary": "Verify email",
        "description": "Use this API to verify user's email address",
        "operationId": "Gojo_VerifyEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbVerifyEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "emailID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "secretCode",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Gojo"
        ]
      }
    }
  },
  "definitions": {
    "pbAnimeGenresReq": {
      "type": "object",
      "properties": {
        "genreID": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "pbAnimeGenresRes": {
      "type": "object",
      "properties": {
        "genres": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbGenre"
          }
        }
      }
    },
    "pbAnimeMetaReq": {
      "type": "object",
      "properties": {
        "languageID": {
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/pbMetaReq"
        }
      }
    },
    "pbAnimeMetaRes": {
      "type": "object",
      "properties": {
        "languageName": {
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/pbMetaRes"
        }
      }
    },
    "pbAnimeMovieReq": {
      "type": "object",
      "properties": {
        "originalTitle": {
          "type": "string"
        },
        "aired": {
          "type": "string",
          "format": "date-time"
        },
        "releaseYear": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbAnimeMovieRes": {
      "type": "object",
      "properties": {
        "originalTitle": {
          "type": "string"
        },
        "aired": {
          "type": "string",
          "format": "date-time"
        },
        "premiered": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "animeMeta": {
          "$ref": "#/definitions/pbAnimeMetaRes"
        },
        "animeGenres": {
          "$ref": "#/definitions/pbAnimeGenresRes"
        },
        "animeStudios": {
          "$ref": "#/definitions/pbAnimeStudiosRes"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbAnimeStudiosReq": {
      "type": "object",
      "properties": {
        "studioID": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "pbAnimeStudiosRes": {
      "type": "object",
      "properties": {
        "studios": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbStudio"
          }
        }
      }
    },
    "pbCreateAnimeMovieRequest": {
      "type": "object",
      "properties": {
        "animeMovie": {
          "$ref": "#/definitions/pbAnimeMovieReq"
        },
        "animeGenres": {
          "$ref": "#/definitions/pbAnimeGenresReq"
        },
        "animeStudios": {
          "$ref": "#/definitions/pbAnimeStudiosReq"
        },
        "animeMetas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbAnimeMetaReq"
          }
        }
      }
    },
    "pbCreateAnimeMovieResponse": {
      "type": "object",
      "properties": {
        "animeMovie": {
          "$ref": "#/definitions/pbAnimeMovieRes"
        }
      }
    },
    "pbCreateGenreRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "pbCreateGenreResponse": {
      "type": "object",
      "properties": {
        "genres": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbGenre"
          }
        }
      }
    },
    "pbCreateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbCreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbGenre": {
      "type": "object",
      "properties": {
        "genreID": {
          "type": "integer",
          "format": "int32"
        },
        "genreName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbLoginUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbLoginUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        },
        "sessionID": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "accessTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "refreshTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbMetaReq": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "overview": {
          "type": "string"
        }
      }
    },
    "pbMetaRes": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "overview": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbRenewTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "accessTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbStudio": {
      "type": "object",
      "properties": {
        "studioID": {
          "type": "integer",
          "format": "int32"
        },
        "studioName": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbUpdateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbUpdateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "passwordChangedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbVerifyEmailResponse": {
      "type": "object",
      "properties": {
        "isVerified": {
          "type": "boolean"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
